#!/usr/bin/env python
import itertools


def solve():
    c = 18503639426889027776360448838117919108291452331405757884139563433567535428661068388582277747496301863761303442562029081441783708013691146679130456264080894671441514112469078495697123034022322493727586428677620442300768907891680114484716935622300367418780060143501023988998714367679997340418386789826864048119
    n = 92607763117955604049049237387301029614639239754387264911926669898696702265655103346092695715326817002386257015433120678010818516588639441582111194127725001203337187633113051761026978959077242868505671163437978306273485557441459420079411376016361460163363533196651917872297676290837322050484241092341751290069
    e = 46633831246757874861936355528262028767601876655542495332764758228127448131149575363958544699898005931195374430067348957317439502639093624228952097724997785134969276031401697657908024685597387467750891484049407553340237913952319843065528890773821268256592035036095084523907214905263610084112376672297894599353

    for i, d in enumerate(sieve()):
        if i % 1000 == 0:
            print(d)
        m = pow(c, d, n)
        x = pow(m, e, n)
        if (x == c):
            print()
            print(d)
            print(m)
            return


def sieve():
    d = dict()
    for q in itertools.count(2):
        p = d.pop(q, None)
        if p is None:
            yield q
            d[q*q] = q
        else:
            x = p + q
            while x in d:
                x += p
            d[x] = p


if __name__ == '__main__':
    solve()
